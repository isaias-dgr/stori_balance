// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	bytes "bytes"

	domain "github.com/isaias-dgr/stori-balance/src/internal/core/domain"
	mock "github.com/stretchr/testify/mock"
)

// Docs is an autogenerated mock type for the Docs type
type Docs struct {
	mock.Mock
}

// GetDoc provides a mock function with given fields: acc
func (_m *Docs) GetDoc(acc *domain.Account) (*bytes.Buffer, error) {
	ret := _m.Called(acc)

	var r0 *bytes.Buffer
	var r1 error
	if rf, ok := ret.Get(0).(func(*domain.Account) (*bytes.Buffer, error)); ok {
		return rf(acc)
	}
	if rf, ok := ret.Get(0).(func(*domain.Account) *bytes.Buffer); ok {
		r0 = rf(acc)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*bytes.Buffer)
		}
	}

	if rf, ok := ret.Get(1).(func(*domain.Account) error); ok {
		r1 = rf(acc)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewDocs interface {
	mock.TestingT
	Cleanup(func())
}

// NewDocs creates a new instance of Docs. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDocs(t mockConstructorTestingTNewDocs) *Docs {
	mock := &Docs{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
